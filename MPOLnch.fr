//========================================================================================
//  
//  $File: //depot/indesign_6.0/highprofile/source/sdksamples/mpolauncher/MPOLnch.fr $
//  
//  Owner: Adobe Developer Technologies
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2008/08/19 04:03:07 $
//  
//  $Revision: #1 $
//  
//  $Change: 643572 $
//  
//  Copyright 1997-2008 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//  
//  Umbrella include file for all the .fr files in the plug-in.
//  
//========================================================================================

//===========================
//  General includes:
//===========================

#include "MenuDef.fh"
#include "ActionDef.fh"
#include "ActionDefs.h"
#include "AdobeMenuPositions.h"
#include "LocaleIndex.h"
#include "PMLocaleIds.h"
#include "StringTable.fh"
//#include "OMTypes.h"
#include "objectmodeltypes.fh"
#include "ShuksanID.h"
#include "ActionID.h"
#include "CommandID.h"
#include "WorkspaceID.h"
#include "widgetid.h"
#include "BuildNumber.h"
#include "PanelList.fh"
#include "Widgets.fh"	// for PalettePanelWidget
#include "InterfaceColorDefines.h"
#include "IControlViewDefs.h"
#include "SysControlIds.h"
#include "AboutBoxID.h"		// for kAboutBoxStaticTextViewImpl
#include "TreeViewDefs.h"



// Project includes:
#include "MPOLnchID.h"
#include "MPOLnchRezDefs.h"

#ifdef __ODFRC__

//================================================================================
// Plugin version definition.
//================================================================================
resource PluginVersion (kSDKDefPluginVersionResourceID)
{
	kTargetVersion,
	kMPOLnchPluginID,
	kSDKDefPlugInMajorVersionNumber, kSDKDefPlugInMinorVersionNumber, 	
	kSDKDefHostMajorVersionNumber, kSDKDefHostMinorVersionNumber,
	kMPOLnchCurrentMajorFormatNumber, kMPOLnchCurrentMinorFormatNumber,
	{ kInDesignProduct, kInCopyProduct },
	{ kWildFS },
	kMPOLnchVersion
};

//================================================================================
//	Boss class definition.
//================================================================================
resource ClassDescriptionTable(kSDKDefClassDescriptionTableResourceID)
{{{


/**
 This boss class provides the actions invoked by this plug-in's
 sub-menu items.
 @ingroup mpolauncher
*/
	Class
	{
		kMPOLnchActionComponentBoss,
		kBaseActionComponentBoss,
		{
			/** Handle the actions from the menu. 
			*/
			IID_IACTIONCOMPONENT, kMPOLnchActionComponentImpl,
		}
	},


/**
 Controls addition of a pop-up menu to the panel.
 @ingroup mpolauncher
*/
	Class
	{
		kMPOLnchPanelWidgetBoss,
		kPalettePanelWidgetBoss,
		{
				/** An implementation of ITextControlData, but with interface
				identifier of IID_IPANELMENUDATA, serves to name the popout panel menu.
				Implementation provided by the API.
				*/ 
				IID_IPANELMENUDATA, kCPanelMenuDataImpl,
		}
	},

	/**
		Gives a list-box (tree view) that has additional observer added... 
		to get selection change notifications
		@ingroup mpolauncher
	*/
	Class 
	{
		kMPOLnchListBoxWidgetBoss,
		kTreeViewWidgetBoss,
		{
			/** Furnishes application framework with widgets as needed */
			IID_ITREEVIEWWIDGETMGR,  kMPOLnchTVWidgetMgrImpl,
			/** Adapts our data model to the needs of the application framework */
			IID_ITREEVIEWHIERARCHYADAPTER,  kMPOLnchTVHierarchyAdapterImpl,
			/** Hold names of the list item */
            IID_ISTRINGLISTDATA,        kStringListDataImpl, 
            /** Display selection message */   
  			IID_IOBSERVER,	kMPOLnchListBoxObserverImpl,
		}
	},

	/**
		Text Widget boss.
	*/
	Class
	{
		kMPOLnchTextWidgetBoss,
		kInfoStaticTextWidgetBoss,
		{
			// Add the following interfaces for a white background (they'd override the default.)
			// IID_ICONTROLVIEW, kAboutBoxStaticTextViewImpl,
			// IID_IBOOLDATA, kPersistBoolDataImpl,
		}
	}
	
	/**
		Adds observer to the 'eyeball' button.
		@ingroup mpolauncher
	*/
	Class 
	{
		kMPOLnchEyeballWidgetBoss,
		kRollOverIconButtonBoss,
		{
			/**
			Receive Update messages from the application core when end-user clicks on the eyeball iconic button.
			*/
			IID_IOBSERVER,	kMPOLnchEyeballObserverImpl,
		}
	},
	
	/**
		Adds observer to the 'Pen' button
		@ingroup mpolauncher
	*/
	Class 
	{
		kMPOLnchPenWidgetBoss,
		kRollOverIconButtonBoss,
		{
			/**
			Receive Update messages from the application core when end-user clicks on the pen iconic button.
			*/
			IID_IOBSERVER,	kMPOLnchPenObserverImpl,
		}
	},

}}};

//================================================================================
// Implementation definition.
//================================================================================
resource FactoryList (kSDKDefFactoryListResourceID) 
{
	kImplementationIDSpace,
	{
#include "MPOLnchFactoryList.h"
	}
};

//================================================================================
// Menu definition.
//================================================================================
resource MenuDef (kSDKDefMenuResourceID)
{
	{
		// The About Plug-ins sub-menu item for this plug-in.
		kMPOLnchAboutActionID,			// ActionID (kInvalidActionID for positional entries)
		kMPOLnchAboutMenuPath,			// Menu Path.
		kSDKDefAlphabeticPosition,			// Menu Position.
		kSDKDefIsNotDynamicMenuFlag,		// kSDKDefIsNotDynamicMenuFlag or kSDKDefIsDynamicMenuFlag.

		kMPOLnchAddItemActionID,
		kMPOLnchTargetMenuPath,
		kMPOLnchAddItemMenuItemPosition,
		kSDKDefIsNotDynamicMenuFlag,

		kMPOLnchRemoveItemActionID,
		kMPOLnchTargetMenuPath,
		kMPOLnchRemoveItemMenuItemPosition,
		kSDKDefIsNotDynamicMenuFlag,

		// Separator for the popup menu on the panel
		kMPOLnchSeparator1ActionID,
		kMPOLnchInternalPopupMenuNameKey kSDKDefDelimiterAndSeparatorPath,	// :- to mark an item as a separator.
		kMPOLnchSeparator1MenuItemPosition,
		kSDKDefIsNotDynamicMenuFlag,

		// About this plugin submenu for the popup menu on the panel
		kMPOLnchPopupAboutThisActionID,
		kMPOLnchTargetMenuPath
		kMPOLnchAboutThisMenuItemPosition,
		kSDKDefIsNotDynamicMenuFlag, 

	}
};

//================================================================================
// Action definition.
//================================================================================
resource ActionDef (kSDKDefActionResourceID)
{
	{ 
		kMPOLnchActionComponentBoss, 		// ClassID of boss class that implements the ActionID.
		kMPOLnchAboutActionID,	// ActionID.
		kMPOLnchAboutMenuKey,	// Sub-menu string.
		kHelpMenuActionArea,				// Area name (see ActionDefs.h).
		kNormalAction,					// Type of action (see ActionDefs.h).
		kDisableIfLowMem,				// Enabling type (see ActionDefs.h).
		kInvalidInterfaceID,			// Selection InterfaceID this action cares about or kInvalidInterfaceID.
		kSDKDefInvisibleInKBSCEditorFlag, // kSDKDefVisibleInKBSCEditorFlag or kSDKDefInvisibleInKBSCEditorFlag.

		kMPOLnchActionComponentBoss,
		kMPOLnchAddItemActionID,		
		kMPOLnchAddItemMenuItemKey,		
		kOtherActionArea,			
		kNormalAction,				
		kDisableIfLowMem,	
		kInvalidInterfaceID,		
		kSDKDefInvisibleInKBSCEditorFlag,
				
		kMPOLnchActionComponentBoss, 
		kMPOLnchRemoveItemActionID, 
		kMPOLnchRemoveItemMenuItemKey,
		kOtherActionArea,
		kNormalAction,
		kCustomEnabling,	// so that UpdateActionStates will get called	
		kInvalidInterfaceID,
		kSDKDefInvisibleInKBSCEditorFlag,

		kMPOLnchActionComponentBoss, 
		kMPOLnchPopupAboutThisActionID, 
		kSDKDefAboutThisPlugInMenuKey,	// Key to the name of this action
		kOtherActionArea,
		kNormalAction,
		kDisableIfLowMem,	
		kInvalidInterfaceID,
		kSDKDefInvisibleInKBSCEditorFlag,

	}
};


//================================================================================
// LocaleIndex
// The LocaleIndex should have indicies that point at your
// localizations for each language system that you are 
// localized for.
//================================================================================
//------------------------------------------------------------
// String LocaleIndex.
//------------------------------------------------------------
resource LocaleIndex (kSDKDefStringsResourceID)
{
	kStringTableRsrcType,
	{
		kWildFS, k_enUS, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_jaJP, kSDKDefStringsResourceID + index_jaJP
		
		kWildFS, k_Wild, kSDKDefStringsResourceID + index_enUS
	}
};

resource LocaleIndex (kSDKDefStringsNoTransResourceID)
{
	kStringTableRsrcType,
	{
		kWildFS, k_Wild, kSDKDefStringsNoTransResourceID + index_enUS
	}
};

// added to support the list elements in the list box
resource LocaleIndex (kMPOLnchListElementRsrcID)
{
	kViewRsrcType,
	{
		kWildFS, k_Wild, kMPOLnchListElementRsrcID + index_enUS
	}
};

resource StringTable (kSDKDefStringsNoTransResourceID + index_enUS)
{
	k_enUS,									// Locale Id
	kEuropeanMacToWinEncodingConverter,		// Character encoding converter
	{
		// No-Translate strings go here:		


		kMPOLnchInternalPopupMenuNameKey,	kMPOLnchInternalPopupMenuNameKey,		// No need to translate, internal menu name.
	}
};



//------------------------------------------------------------
// Panel LocaleIndex.
//------------------------------------------------------------
resource LocaleIndex (kSDKDefPanelResourceID)
{
	kViewRsrcType,
	{
		kWildFS, k_Wild, 	kSDKDefPanelResourceID + index_enUS
	}
};


//========================================================================================
// Type definition.
//========================================================================================
type MPOLnchPanelWidget(kViewRsrcType) : PalettePanelWidget(ClassID = kMPOLnchPanelWidgetBoss) 
{
	CPanelMenuData;
};
type MPOLnchListBox			(kViewRsrcType) : TreeViewWidget	(ClassID = kMPOLnchListBoxWidgetBoss) { };
type MPOLnchNodeWidget(kViewRsrcType) : PrimaryResourcePanelWidget(ClassID = kTreeNodeWidgetBoss) 
{
};
type MPOLnchTextWidget		(kViewRsrcType) : InfoStaticTextWidget	(ClassID = kMPOLnchTextWidgetBoss) { };
type MPOLnchEyeballWidget 	(kViewRsrcType) : RollOverIconButtonWidget (ClassID = kMPOLnchEyeballWidgetBoss) {};
type MPOLnchPenWidget 	(kViewRsrcType) : RollOverIconButtonWidget (ClassID = kMPOLnchPenWidgetBoss) {};

//================================================================================
// PanelList definition.
//================================================================================
resource PanelList (kSDKDefPanelResourceID)
{
	{
		// 1st panel in the list
		kSDKDefPanelResourceID,		// Resource ID for this panel (use SDK default rsrc ID)
		kMPOLnchPluginID,			// ID of plug-in that owns this panel
		kIsResizable,
		kMPOLnchPanelWidgetActionID,	// Action ID to show/hide the panel
		kMPOLnchPanelTitleKey,		// Shows up in the Window list.
		"",							// Alternate menu path of the form "Main:Foo" if you want your palette menu item in a second place
		0.0,						// Alternate Menu position Alternate Menu position for determining menu order
		0,0,						// Rsrc ID, Plugin ID for a PNG icon resource to use for this palette
		c_Panel
	}	
};

//================================================================================
// PanelView definition.
// The view is not currently localised: therefore, it can reside here.
// However, if you wish to localise it, it is recommended to locate it in one of
// the localised framework resource files (i.e. MPOLnch_enUS.fr etc.).
//================================================================================
resource MPOLnchPanelWidget(kSDKDefPanelResourceID + index_enUS)
{
	__FILE__, __LINE__,					// Localization macro		
	kMPOLnchPanelWidgetID,			// WidgetID 
	kPMRsrcID_None,						// RsrcID
	kBindNone,							// Binding (0=none)
	0, 0, 207, 200,						// Frame: left, top, right, bottom.
	kTrue, kTrue,						// Visible, Enabled
	kFalse,								// Erase background
	kInterfacePaletteFill,				// Erase to color
	kFalse,								// Draw dropshadow
	kMPOLnchPanelTitleKey,			// Panel name	
	{
		MPOLnchListBox   //Tree view
		(
			kMPOLnchListBoxWidgetID, kPMRsrcID_None,	// WidgetId, RsrcId
			kBindAll,											// Frame binding
			Frame(-1,0,208,96)		// Frame
			kTrue, kTrue,									// Visible, Enabled
			kTrue, 						// EraseBeforeDraw
			kInterfacePaletteFill,	 	// InterfaceColor
			"",
			kHideRootNode | kDrawEndLine,	// Options. Display root node
			kFalse,		// Use H Scroll bar
			kTrue,		// Use V scroll bar
			20,			// fVScrollButtonIncrement
			20,			// fVThumbScrollIncrement
			0,			// fHScrollButtonIncrement
			0,			// fHThumbScrollIncrement
			1,			// Items selectable, 0 = No Selection, 1 = Single Selection, 2 = Multiple Selection
			kFalse,		// Allow children from multiple parents to be selected
			kTrue,		// Allow discontiguous selection
			{
				//The tree view is dynamically created.		
			},

		),
		
	}

	kMPOLnchInternalPopupMenuNameKey		// Popup menu name (internal)
};

resource MPOLnchNodeWidget (kMPOLnchListElementRsrcID + index_enUS)
{
	__FILE__, __LINE__,
	kMPOLnchListParentWidgetId, kPMRsrcID_None,	// WidgetId, RsrcId
	kBindLeft | kBindRight,			// Frame binding
	Frame(0, 0, 194, 44),			// Frame
	kTrue, kTrue,					// Visible, Enabled
	"",								// Panel name
	{
	/*
		MPOLnchEyeballWidget
		(
			kMPOLnchListElementEyeballWidgetID, kMPOLnchEyeBallIcon, kMPOLnchPluginID, // WidgetId, RsrcId
			kBindLeft,											// Frame binding
			Frame(3,1,44,42)									// Frame
			kTrue, kTrue,										// Visible, Enabled
			kADBEIconSuiteButtonType,
		),
		
		MPOLnchPenWidget
		(
			kMPOLnchListElementPenWidgetID, kMPOLnchPenIcon, kMPOLnchPluginID, // WidgetId, RsrcId
			kBindLeft,											// Frame binding
			Frame(25,1,44,18)									// Frame
			kTrue, kTrue,										// Visible, Enabled
			kADBEIconSuiteButtonType,
		),
		*/
		// Just a info-static text widget with about-box text view to get white bg.
		MPOLnchTextWidget
		(
			kMPOLnchTextWidgetID, kPMRsrcID_None,		// WidgetId, RsrcId
			kBindLeft | kBindRight,								// Frame binding
			Frame(45,1,194,42)									// Frame
			kTrue, kTrue, kAlignLeft,kEllipsizeEnd,kTrue,		// Visible, Enabled, ellipsize style, convert ampersands
			"",													// Initial text
			0,													// Associated widget for focus
			kPaletteWindowSystemScriptFontId,					// default font 
			kPaletteWindowSystemScriptHiliteFontId,				// for highlight state.
		),
		
	}
};





#endif // __ODFRC__

#include "MPOLnch_enUS.fr"
#include "MPOLnch_jaJP.fr"

// End, MPOLnch.fr.




